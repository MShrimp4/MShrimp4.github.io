<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="http://dev.ikx.kr/feed.xml" rel="self" type="application/atom+xml" /><link href="http://dev.ikx.kr/" rel="alternate" type="text/html" /><updated>2021-06-13T00:46:37+09:00</updated><id>http://dev.ikx.kr/feed.xml</id><title type="html">cdadr</title><subtitle>is an argument of the procedure</subtitle><author><name>Yongha Hwang</name></author><entry><title type="html">Weekly update - transfer queueing, execution safety flag, and MTP</title><link href="http://dev.ikx.kr/2nd-Saturday/" rel="alternate" type="text/html" title="Weekly update - transfer queueing, execution safety flag, and MTP" /><published>2021-06-12T10:10:00+09:00</published><updated>2021-06-12T10:10:00+09:00</updated><id>http://dev.ikx.kr/2nd-Saturday</id><content type="html" xml:base="http://dev.ikx.kr/2nd-Saturday/">&lt;h2 id=&quot;transfer-queueing&quot;&gt;Transfer queueing&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gitlab.xfce.org/xfce/thunar/-/issues/569&quot;&gt;Thunar !569&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After transfer queueing was introduced, it frequently caused crashes or freezing when working with remote location. This problem was solved by introducing a waiting queue. To be released in Thunar 4.17.4.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;This patch will not be backported. If you have this problem with Thunar 4.16, it is recommended to set parallel transfer to “Always” to avoid this problem.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You might ask about how it was done before. How can a job can be queued when there is no queue? The answer is simple. Since every transfer job runs on a separate thread, it is possible to play a game of musical chairs. Every thread tries to be the only active thread, and if a thread fails to start, it waits until the next opportunity arises. This is easy to implement when parallel transfer is already implemented. But unfortunately, the game did not go well.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;wip-introduction-of-an-execution-safety-flag&quot;&gt;WIP: Introduction of an execution safety flag&lt;/h2&gt;

&lt;p&gt;(I recommend reading &lt;a href=&quot;https://gitlab.xfce.org/xfce/thunar/-/issues/156&quot;&gt;Thunar !156&lt;/a&gt; for the context.)&lt;/p&gt;

&lt;p&gt;Since the executable bit is not enough to confirm that the file is safe to execute,  I am implementing an additional metadata (execution safety flag). Thunar will check this flag even if the execution bit is on, so a user has to confirm that they know that they are launching an executable. This data is contained in GVFS-metadata, and will remember SHA-256 hash value of that file. This will work as a per-file option to allow launching the executable.&lt;/p&gt;

&lt;p&gt;I already finished coding a feature to save a hash value per-file and using it to verify executable, and will be added to libxfce4util soon. Interface with this safety flag is still work-in-progress, though.&lt;/p&gt;

&lt;h2 id=&quot;wip-mtp-freeze&quot;&gt;WIP: MTP freeze&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gitlab.xfce.org/MShrimp4/thunar/-/commits/async-icon-render&quot;&gt;Thunar:async-icon-render&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Recently, there are a lot of issue reports about MTP, and most of the complaints are about freeze. A directory under mtp:// that contains a lot of files tends to cause problems. One problem is that icon renderer reads file contents and might clog the main event loop, so I am experimenting with icon rendering right now. Trying to change directory while a directory is loading also freezes the environment, so requesting a file list of the current directory (or cancelling it) might be blocking for some reason.&lt;/p&gt;</content><author><name>Yongha Hwang</name></author><category term="DEV" /><category term="GSOC_2021" /><category term="gsoc_2021" /><category term="xfce" /><summary type="html">Transfer queueing</summary></entry><entry><title type="html">GSOC 2021</title><link href="http://dev.ikx.kr/GSOC-2021/" rel="alternate" type="text/html" title="GSOC 2021" /><published>2021-06-02T11:27:00+09:00</published><updated>2021-06-02T11:27:00+09:00</updated><id>http://dev.ikx.kr/GSOC-2021</id><content type="html" xml:base="http://dev.ikx.kr/GSOC-2021/">&lt;p&gt;Good news! I have been accepted to GSoC 2021. (Well, actually, it had been 3 weeks since it was announced, so I “was” accepted, to be exact.) I am contributing to XFCE this summer, so I will explain who I am, and what I am going to do.&lt;/p&gt;

&lt;p&gt;First stop. So, who am I? My name is Yongha Hwang, and I am an Electronic Engineering sophomore. And that’s enough for personal information to do about contributing, so I’ll explain my experience with Linux, XFCE and C altogether.&lt;/p&gt;

&lt;p&gt;I use Linux as my main OS. For developemnt, for surfing web, for entertainment like gaming, and everything else that happens after pressing power button. Although I use it as a main OS, I reinstall linux every 3~6 months. Since I don’t install the same thing everytime, I have used Ubuntu, Xubuntu, Linux Mint (both Cinnamon and MATE), Manjaro, Arch, Gentoo, and et cetra. I have even used Linux from Scratch (with LXQt) as a main OS.&lt;/p&gt;

&lt;p&gt;My first experience with XFCE was Xubuntu in 2011. My first linux distribution was Ubuntu, as you have guessed. At that time Ubuntu was packed with Unity DE. It looked very futuristic to me since the only UI experience was with Windows XP and 98. But it did have one big problem to me: it was resource-heavy. The computer I was using at that time was quite slow and Internet Explorer took a whopping 12 seconds to show up. So I had to look for a lighter alternative and Xubuntu was a natural choice. Since then I liked how light DEs look like, so I use light DEs most of the time not because of my low-end PC, but because I like the visual of “nothing fancy but looks fine enough.”&lt;/p&gt;

&lt;p&gt;I started programming in C about the time I started using Linux. I have not much to tell about C, though. What I do have to show is &lt;a href=&quot;https://github.com/MShrimp4/SICP_Problems/tree/master/5.51&quot;&gt;a Scheme interpreter&lt;/a&gt;, which I made when I was studying SICP (for fun, and I think it’s worth the time.)&lt;/p&gt;

&lt;p&gt;So, what do I work on for XFCE? I have set two big goals for this summer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fix buggy launch behavior&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Some people experience a bug that thunar tries to execute ordinary files like subtitles, and even directories. That happens when these files have execution bit (+x) enabled. I will try to fix this problem by checking MIME type before executing.&lt;/p&gt;

&lt;p&gt;Another problem with launch behavior is that someone can slip in an executable file with execution bit on by packing it inside tar archives. This may not be a problem with normal scripts, but .desktop files can change their icon or file name to resemble normal document files. Files (formerly known as Nautilus,the file manager of GNOME) had the same problem before and they introduced safety flags using GVFS metadata as a solution. We can do the same trick because we use GVFS, too.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Improvements to file transmission&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Have you ever experienced this: You were copying a lot of files, and somehow it got interrupted. You copy same files again. You skipped everything that was “already copied” to save time, only to find out a year later that the most important file was interrupted during the copy and you are left with the first 10KB of that file. To prevent this issue, you can copy every files again just to be sure, but that is a huge waste of time. If there is an option that leaves a partailly copied file as *.partial and it automatically deletes one, wouldn’t it be a better solution? If I have spare time I also would implement pedantic feature like “verify checksum of every files copied” to use on network drives.&lt;/p&gt;

&lt;p&gt;Speaking of network files, Thunar loses metadata when copying files from GVFS. GVFS is a wrapper (naively speaking) for exotic locations like network file shares, smartphones, trash bin, and et cetra. Also, files copied from GDrive are labeled with unreadable names rather than the actual file name. I would also fix this problem.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Well, that’s what as far as I can tell! Congratulations to fellow XFCE GSoC contributors Vishal Sharma and Kefalidis Sergios, and major thanks to my mentor Alexander Schwinn.&lt;/p&gt;

&lt;p&gt;Check out my Thunar contributions here:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.xfce.org/MShrimp4&quot;&gt;XFCE Gitlab profile&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.xfce.org/xfce/thunar/-/merge_requests?scope=all&amp;amp;utf8=%E2%9C%93&amp;amp;state=merged&amp;amp;author_username=MShrimp4&quot;&gt;Thunar merge requests&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.xfce.org/xfce/exo/-/merge_requests?scope=all&amp;amp;utf8=%E2%9C%93&amp;amp;state=all&amp;amp;author_username=MShrimp4&quot;&gt;Exo merge reuqests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Yongha Hwang</name></author><category term="DEV" /><category term="GSOC_2021" /><category term="gsoc_2021" /><category term="xfce" /><category term="introduction" /><summary type="html">Good news! I have been accepted to GSoC 2021. (Well, actually, it had been 3 weeks since it was announced, so I “was” accepted, to be exact.) I am contributing to XFCE this summer, so I will explain who I am, and what I am going to do.</summary></entry></feed>